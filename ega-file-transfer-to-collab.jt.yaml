#Demo workflow

workflow:
  name:  ega-file-transfer-to-collab
  version: "0.4.0"
  source_code: "https://github.com/icgc-dcc/ega-file-transfer-to-collab-jt"

  runtime:
    docker: null

  execution:
    constraint: same_host  # other values: 'shared_fs' (not supported yet), 'same_worker'
    memory: 4g
    cpu: 2

  input:
    project_code:
      type: string
    ega_dataset_id:
      type: string
    submitter_sample_id:
      type: string
    ega_sample_id:
      type: string
    icgc_sample_id:
      type: string
    submitter_donor_id:
      type: string
    submitter_specimen_id:
      type: string
    submitter:
      type: string
    bundle_type: # experiement or analysis
      type: string
    bundle_id:   # either EGAR or EGAX ID
      type: string
    library_strategy:
      type: string
    ega_metadata_git_repo:
      type: string
    ega_metadata_path:
      type: string
    ega_metadata_file_name:
      type: string
    ega_metadata_object_id:  # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
      type: string
    ega_files:
      type: array
      items:
        type: object
        properties:
          ega_file_id:
            type: string
          file_name:
            type: string
          file_size:  # can remove this if it's not avaiable at EGA
            type: integer
          file_md5sum:
            type: string
          object_id:  # this is the object_id obtained from ICGC service using bundle_id and file_name as input
            type: string

  output: null  # we may not need this, does the workflow as a whole need some sort of output? or output from individual tasks is just fine

  #completion_depends_on:  # do we need this? is it all tasks succeeded then it's completed
  #- completed@upload

  tasks:
    prepare_metadata_xml:
      tool: prepare_metadata_xml
      input:
        ega_metadata_git_repo: ega_metadata_git_repo
        ega_metadata_path: ega_metadata_path
        project_code: project_code
        bundle_id: bundle_id
        ega_dataset_id: ega_dataset_id
        ega_sample_id: ega_sample_id
        ega_metadata_file_name: ega_metadata_file_name
      depends_on: null

    xml_file_upload:
      tool: upload
      input:
        bundle_id: bundle_id
        object_id: ega_metadata_object_id  # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
        file: xml_file@prepare_metadata_xml
        file_name: ega_metadata_file_name
        file_size: xml_file_size@prepare_metadata_xml
        file_md5sum: xml_file_md5sum@prepare_metadata_xml

    parallel_download:
      scatter:
        input:
          ega_file:
            with_items: ega_files  # this can be from output of a previous task, eg, files@previous_task
            task_suffix: ega_file.ega_file_id  # Optional. IN this case, 'ega_file' will be used if omitted.
      tasks:
        download:
          tool: download  # optional, if omitted tool name will be the same as task name
          input:
            ega_file_id: ega_file.ega_file_id
            file_name: ega_file.file_name
            file_size: ega_file.file_size
            file_md5sum: ega_file.file_md5sum
            object_id: ega_file.object_id
          depends_on: null
        md5sum_check_data:
          tool: md5sum_check
          input:
            file: file@download
            file_name: file_name@download
            file_md5sum: ega_file.file_md5sum
          depends_on:  # optional, this could be figured out from input params
          - completed@download@same_host  # state@parent_tool@
        decryption:
          tool: decryption  # optional, if omitted tool name will be the same as task name
          input:
            input_file: file@download
            ega_file_id: ega_file_id@download
            file_name: file_name@download
            file_size: file_size@download
            file_md5sum: file_md5sum@download
            object_id: object_id@download
          depends_on:
          - completed@md5sum_check_data  # depends on the success of md5sum check
        md5sum_check_decrypt:
          tool: md5sum_check
          input:
            file: file@decryption
            file_md5sum: file_md5sum@decryption
          depends_on:  # optional, this could be figured out from input params
          - completed@decryption # state@parent_tool@
        generate_bai:
          tool: generate_bai  # optional, if omitted tool name will be the same as task name
          input:
            bam_file: file@decryption
            ega_file_id: ega_file_id@decryption
            file_name: file_name@decryption
            file_size: file_size@decryption
            file_md5sum: file_md5sum@decryption
            bundle_id: bundle_id
          depends_on: 
          - completed@decryption
          - completed@md5sum_check_decrypt
        upload:
          tool: upload
          input:
            bundle_id: bundle_id
            object_id: ega_metadata_object_id  # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
            file: file@decryption
            file_name: file_name@decryption
            file_size: file_size@decryption
            file_md5sum: file_md5sum@decryption

            idx_object_id: bai_object_id@generate_bai  # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
            idx_file: file@generate_bai
            idx_file_name: file_name@generate_bai
            idx_file_size: file_size@generate_bai
            idx_file_md5sum: file_md5sum@generate_bai

          depends_on:
          - completed@decryption
          - completed@generate_bai


# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  prepare_metadata_xml:
    command: prepare_metadata_xml.py
    input:
      ega_metadata_git_repo:
        type: string
      ega_metadata_path:
        type: string
      project_code:
        type: string
      bundle_id:  # EGAR or EGAZ ID
        type: string
      ega_dataset_id:
        type: string
      ega_sample_id:
        type: string
      ega_metadata_file_name:
        type: string
    output:
      xml_file:
        type: string
        is_file: true
      xml_file_name:  # passing through from ega_metadata_file_name
        type: string
      xml_file_size:
        type: integer
      xml_file_md5sum:
        type: string

  download:
    command: download.py
    input:
      ega_file_id:
        type: string
      file_name:
        type: string
      file_size:
        type: string
      file_md5sum:
        type: string
      object_id:
        type: string
    output:
      file:  # new field
        type: string
        is_file: true
      ega_file_id:  # passing through
        type: string
      file_name:  # passing through
        type: string
      file_size:  # passing through
        type: integer
      file_md5sum:  # passing through
        type: string
      object_id:  # passing through
        type: string

  md5sum_check:
    command: md5sum_check.py
    input:
      file:  # new field
        type: string
        is_file: true
      file_md5sum:
        type: string
    output:
      file:  # passing through
        type: string
        is_file: true
      file_md5sum:
        type: string

  decryption:
    command: decryption.py
    input:
      input_file:
        type: string
        is_file: true
      ega_file_id:  # passing through
        type: string
      file_name:  # passing through
        type: string
      file_size:  # passing through
        type: string
      file_md5sum:  # passing through
        type: string
      object_id:  # passing through
        type: string
    output:
      file:
        type: string
        is_file: true
      ega_file_id:  # passing through
        type: string
      file_name:  # passing through
        type: string
      file_size:  # passing through
        type: string
      file_md5sum:  # passing through
        type: string
      object_id:  # passing through
        type: string

  generate_bai:
    command: generate_bai.py
    input:
      bam_file:
        type: string
        is_file: true
      ega_file_id:
        type: string
      file_name:
        type: string
      file_size:
        type: integer
      file_md5sum:
        type: string
      bundle_id:
        type: string
    output:
      # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
      idx_object_id:
        type: string
      idx_file:
        type: string
        is_file: true
      idx_file_name:
        type: string
      idx_file_size:
        type: string
      idx_file_md5sum:
        type: string

  upload:
    command: upload.py
    input:
      bundle_id:
        type: string
      object_id:
        type: string
      file:
        type: string
        is_file: true
      file_name:
        type: string
      file_size:
        type: integer
      file_md5sum:
        type: string
      # the follow params are optional
      idx_object_id:
        type: string
      idx_file:
        type: string
        is_file: true
      idx_file_name:
        type: string
      idx_file_size:
        type: integer
      idx_file_md5sum:
        type: string
