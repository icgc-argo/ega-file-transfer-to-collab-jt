#Demo workflow

workflow:
  name:  ega-file-transfer-to-collab
  version: "0.7.1"
  source_code: "https://github.com/icgc-dcc/ega-file-transfer-to-collab-jt"

  runtime:
    docker: null

  execution:
    constraint: same_worker  # other values: 'shared_fs' (not supported yet), 'same_host'
    memory: 4g
    cpu: 2

  input:
    project_code:
      type: string
    ega_study_id:
      type: string
    ega_dataset_id:
      type: string
    submitter_sample_id:
      type: string
    ega_sample_id:
      type: string
    icgc_sample_id:
      type: string
    submitter:
      type: string
    ega_analysis_id:  # null if it's experiment
      type: string
    ega_experiment_id:  # null if it's analysis
      type: string
    ega_run_id:  # null if it's analysis
      type: string
    bundle_type: # experiement or analysis
      type: string
    bundle_id:   # either EGAR or EGAX ID
      type: string
    library_strategy:
      type: string
    ega_metadata_repo:
      type: string
    ega_metadata_file_name:
      type: string
    ega_metadata_object_id:  # this is the object_id obtained from ICGC service using bundle_id and ega_metadata_file_name as input
      type: string
    insert_size:
      type: integer
    paired_end:
      type: boolean
    donor_gender:
      type: string
    donor_submitter_id:
      type: string
    sample_type:
      type: string
    specimen_class:
      type: string
    specimen_type:
      type: string
    aligned_reference_genome:
      type: string
    files:
      type: array
      items:
        type: object
        properties:
          ega_file_id:
            type: string
          file_name:
            type: string
          file_md5sum:
            type: string
          object_id:  # this is the object_id obtained from ICGC service using bundle_id and file_name as input
            type: string
          idx_file_name:
            type: string
          idx_object_id:
            type: string
          file_type:
            type: string

  output: null  # we may not need this, does the workflow as a whole need some sort of output? or output from individual tasks is just fine

  tasks:
    download:
      tool: download  # optional, if omitted tool name will be the same as task name
      input:
        project_code: project_code
        files: files
      depends_on: null

    prepare_metadata_xml:
      tool: prepare_metadata_xml
      input:
        ega_metadata_repo: ega_metadata_repo
        project_code: project_code
        bundle_id: bundle_id
        ega_study_id: ega_study_id
        ega_dataset_id: ega_dataset_id
        ega_sample_id: ega_sample_id
        ega_analysis_id: ega_analysis_id
        ega_experiment_id: ega_experiment_id
        ega_run_id: ega_run_id
        ega_metadata_file_name: ega_metadata_file_name
        out_dir: out_dir@download
      depends_on: null

    generate_song_payload:
      tool: generate_song_payload
      input:
        input_directory: out_dir@download
        files: files
        song_analysis_id: bundle_id
        experiment_library_strategy: library_strategy
        reference_genome: aligned_reference_genome
      depends_on:
        - completed@download
        - completed@prepare_metadata_xml

    upload:
      tool: upload
      input:
        input_directory: out_dir@download
        study_id: project_code
        paired_end: paired_end
        files: files
      depends_on:
      - completed@generate_song_payload

    delete_tmp_dir:
      tool: delete_tmp_dir
      input:
        dir: out_dir@upload



# A workflow is made up with one or more tools
# Each tool can have its own docker imagine if desirable
tools:
  download:
    command: download.py
    input:
      files:
        type: array
      project_code:
        type: string
    output:
      out_dir:  # new field
        type: string
  prepare_metadata_xml:  # make a new XML cancatenate original EGA XMLs: study, sample, analysis/(experiment and run)
    command: prepare_metadata_xml.py
    input:
      ega_metadata_repo:
        type: string
      project_code:
        type: string
      bundle_id:  # EGAR or EGAZ ID
        type: string
      ega_study_id:
        type: string
      ega_dataset_id:
        type: string
      ega_sample_id:
        type: string
      ega_analysis_id:
        type: string
      ega_expriment_id:
        type: string
      ega_run_id:
        type: string
      ega_metadata_file_name:
        type: string
      out_dir:
        type: string
    output:
      file:
        type: string
        is_file: true
  generate_song_payload:
    command: generate_song_payload.py
    input:
      input_directory:
        type: string
      files:
        type: array
      song_analysis_id:
        type: string
      experiment_library_strategy:
        type: string
      reference_genome:
        type: string
  upload:
    command: upload.py
    input:
      input_directory:
        type: string
      payload:
        type: string
      study_id:
        type: boolean
      files:
        type: array
  qc_from_collab:
    command: qc_from_collab.py
    input:
      object_id:
        type: string
      file_name:
        type: string

  qc_from_aws:
    command: qc_from_aws.py
    input:
      object_id:
        type: string
      file_name:
        type: string
      project_code:
        type: string

  delete_tmp_dir:
    command: delete_tmp_dir.py
    input:
      dir:
        type: string
